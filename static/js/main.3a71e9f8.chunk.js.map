{"version":3,"sources":["assets/images/logo.svg","components/Header/Header.js","components/Content/Content.js","assets/images/fb.svg","assets/images/ig.svg","assets/images/tw.svg","components/SocialMediaGroup/SocialMediaGroup.js","components/Footer/Footer.js","components/TripOptions/TripOptions.js","assets/images/ganapathy.png","components/Main/Main.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","isShowEle","setIsShowEle","refs","navInput","useRef","goToFooter","id","reference","current","click","preShowElem","setTimeout","forEach","elem","classList","remove","add","scrollIntoView","behavior","className","href","src","logo","alt","type","placeholder","aria-label","icon","faSearch","onClick","style","visibility","ref","htmlFor","Content","SocialMediaGroup","data-name","tw","data-tip","ig","fb","Footer","to","TripOptions","activeTabId","setActiveTabId","faTimes","tripsData","map","tabTitle","idx","url","description","Main","chillRef","spookyRef","dessertRef","outWildRef","scrollToContent","window","innerHeight","container","setContainer","1","2","3","4","5","handleContainerHeight","useEffect","addEventListener","backgroundImage","BackgroundImage","height","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","ready","unregister","message","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3a71e9f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.19e60f1b.svg\";","import { useState, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\n\r\nconst Header = (props) => {\r\n    const [isShowEle, setIsShowEle] = useState(false);\r\n    const { refs } = props;\r\n\r\n    const navInput = useRef(null);\r\n    const handleClick = () => {\r\n        navInput.current.click();\r\n        setIsShowEle(true);\r\n    };\r\n\r\n    const goToFooter = (id) => {\r\n        const reference = refs[`${id}`];\r\n        navInput.current.click();\r\n        setIsShowEle((preShowElem) => {\r\n            return preShowElem ? !preShowElem : preShowElem;\r\n        });\r\n        setTimeout(() => {\r\n            if (!reference?.current) return;\r\n            [1, 2, 3, 4].forEach((elem) => {\r\n                refs[`${elem}`].current.classList.remove(\"active\");\r\n            });\r\n            reference.current.classList.add(\"active\");\r\n            reference.current.scrollIntoView({ behavior: \"smooth\" });\r\n            reference.current.click({ behavior: \"smooth\" });\r\n        }, 400);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header className='flex justify-between xs:mx-2'>\r\n                <a href='/'>\r\n                    <img src={logo} alt='ntLogo' className='w-16 h-16'></img>\r\n                </a>\r\n\r\n                <div className='flex items-center space-x-4'>\r\n                    <input\r\n                        type='text'\r\n                        className='bg-transparent border-none px-8 rounded-full w-11/12 py-3 focus:outline-none focus:ring-2 focus:w-100'\r\n                        placeholder='Search trips'\r\n                    ></input>\r\n                    <div\r\n                        className='flex items-center space-x-4'\r\n                        aria-label='search'\r\n                    >\r\n                        <FontAwesomeIcon\r\n                            icon={faSearch}\r\n                            className='text-white'\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        onClick={() => handleClick()}\r\n                        type='button'\r\n                        className='flex\r\n                            items-center\r\n                            justify-center\r\n                            w-40 h-14\r\n                            cursor-pointer\r\n                            rounded-full\r\n                            bg-custom-cyan\r\n                            text-white\r\n                            text-base\r\n                            font-semibold\r\n                            font-larsseit\r\n                            uppercase\r\n                            lg:w-56\r\n                            focus:outline-none\r\n                            '\r\n                        aria-label='Menu'\r\n                    >\r\n                        menu\r\n                    </button>\r\n                    <div\r\n                        className='navigation'\r\n                        style={{\r\n                            visibility: isShowEle ? \"visible\" : \"hidden\",\r\n                        }}\r\n                    >\r\n                        <input\r\n                            type='checkbox'\r\n                            className='navigation__checkbox'\r\n                            id='navi-toggle'\r\n                            ref={navInput}\r\n                        ></input>\r\n                        <label\r\n                            htmlFor='navi-toggle'\r\n                            className='navigation__button'\r\n                            onClick={() => setIsShowEle(false)}\r\n                        >\r\n                            <span className='navigation__icon'>&nbsp;</span>\r\n                        </label>\r\n                        <div className='navigation__background'>&nbsp;</div>\r\n                        <nav className='navigation__nav'>\r\n                            <ul className='navigation__list'>\r\n                                <li\r\n                                    className='navigation__item'\r\n                                    onClick={() => {\r\n                                        goToFooter(1);\r\n                                    }}\r\n                                >\r\n                                    <a href='!#' className='navigation__link'>\r\n                                        <span>01</span>Chill Adventure\r\n                                    </a>\r\n                                </li>\r\n                                <li\r\n                                    className='navigation__item'\r\n                                    onClick={() => {\r\n                                        goToFooter(2);\r\n                                    }}\r\n                                >\r\n                                    <a href='!#' className='navigation__link'>\r\n                                        <span>02</span>Spooky Times\r\n                                    </a>\r\n                                </li>\r\n                                <li\r\n                                    className='navigation__item'\r\n                                    onClick={() => {\r\n                                        goToFooter(3);\r\n                                    }}\r\n                                >\r\n                                    <a href='!#' className='navigation__link'>\r\n                                        <span>03</span>Desert Madness\r\n                                    </a>\r\n                                </li>\r\n                                <li\r\n                                    className='navigation__item'\r\n                                    onClick={() => {\r\n                                        goToFooter(4);\r\n                                    }}\r\n                                >\r\n                                    <a href='!#' className='navigation__link'>\r\n                                        <span>04</span>Out in the wild\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { Fragment } from \"react\";\r\n\r\nconst Content = () => {\r\n    return (\r\n        <Fragment>\r\n            {/* main content */}\r\n            <div className='flex flex-col items-center text-center justify-center mt-14 sm:mt-36 md:mt-32 lg:mt-36 text-white lg:mb-36'>\r\n                <h1 className='font-noeDisplay text-6xl sm:text-8xl mb-2 animate-moveInLeft'>\r\n                    Night Trips\r\n                </h1>\r\n                <div className='font-larsseit font-bold text-sm my-7'>\r\n                    WE GOT TRIPS FOR THE TRIPPSTER IN YOU\r\n                </div>\r\n                {/* trip description */}\r\n                <div className='text-sm font-larsseit w-5/12 md:text-justify text-justify break-all leading-6 animate-moveInRight'>\r\n                    <span>\r\n                        Neque, eros commodo, nascetur ullamcorper vitae.\r\n                        Tincidunt ut venenatis, volutpat lorem ut faucibus\r\n                        mauris, quisque. Integer gravida sed quis congue. Vel\r\n                        risus, arcu a viverra leo id pulvinar ultricies. Enim in\r\n                        in in pulvinar nulla sollicitudin. Ullamcorper.\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/fb.3edeb194.svg\";","export default __webpack_public_path__ + \"static/media/ig.da5a51d6.svg\";","export default __webpack_public_path__ + \"static/media/tw.ca4fb915.svg\";","import fb from \"../../assets/images/fb.svg\";\r\nimport ig from \"../../assets/images/ig.svg\";\r\nimport tw from \"../../assets/images/tw.svg\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst SocialMediaGroup = () => {\r\n    return (\r\n        <div className='z-10'>\r\n            <div\r\n                className='list-none space-y-2 mr-6 sm:mr-0'\r\n                data-name='social_media'\r\n            >\r\n                <div className='p-8rounded-lg max-w-md pb-10'>\r\n                    <button className='mt-3 text-white w-full rounded focus:outline-none'>\r\n                        <img\r\n                            src={tw}\r\n                            alt='twitter logo'\r\n                            className='w-3 h-4'\r\n                            data-tip='Twitter'\r\n                        />\r\n                    </button>\r\n\r\n                    <button className='mt-3 text-white w-full rounded focus:outline-none'>\r\n                        <img\r\n                            src={ig}\r\n                            alt='instagram logo'\r\n                            className='w-3 h-4'\r\n                            data-tip='Instagram'\r\n                        />\r\n                    </button>\r\n\r\n                    <button className='mt-3 text-white w-full rounded focus:outline-none'>\r\n                        <img\r\n                            src={fb}\r\n                            alt='facebook logo'\r\n                            className='w-3 h-4'\r\n                            data-tip='Facebook'\r\n                        />\r\n                    </button>\r\n                </div>\r\n                <ReactTooltip type='info' />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SocialMediaGroup;\r\n","import { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SocialMediaGroup from \"../SocialMediaGroup/SocialMediaGroup\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <footer className='flex justify-between pt-10 sm:py-10 md:py-20 '>\r\n                <div\r\n                    className='flex flex-col justify-center sm:ml-0 z-10'\r\n                    onClick={() => {\r\n                        if (!props?.refs?.current) return;\r\n                        props.refs.current.scrollIntoView({\r\n                            behavior: \"smooth\",\r\n                        });\r\n                    }}\r\n                >\r\n                    <Link\r\n                        to='#'\r\n                        className='font-larsseit transform -rotate-90 text-white text-xs font-medium tracking-widest mb-10'\r\n                    >\r\n                        SCROLL\r\n                    </Link>\r\n                    <span className='border-b-2 transform -rotate-90 mt-6 border-blue-300 border-solid'></span>\r\n                </div>\r\n                <SocialMediaGroup />\r\n            </footer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport tripsData from \"../../data/tripsData.json\";\r\n\r\nconst TripOptions = (props) => {\r\n    const [activeTabId, setActiveTabId] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n            <div className='grid z-1 relative'>\r\n                <section\r\n                    className='bg-custom-black text-white flex items-center justify-center'\r\n                    aria-label='tripsTitle'\r\n                >\r\n                    <div ref={props.refs[`${5}`]} className='z-30'>\r\n                        <div className='flex items-center space-x-6 mx-auto justify-center'>\r\n                            <div className='flex items-center space-x-6 justify-end'>\r\n                                <h2 className='text-white font-Noe font-bold text-3xl md:text-5xl lg:text-6xl'>\r\n                                    Pick your trip\r\n                                </h2>\r\n\r\n                                <div\r\n                                    className='flex items-center space-x-4 pr-3'\r\n                                    aria-label='close'\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={faTimes}\r\n                                        className='text-custom-green text-xl mx-3'\r\n                                    />\r\n                                    <p className='font-larsseit text-base tracking-tighter'>\r\n                                        Our team put together some trips to you\r\n                                        to discover, <br /> feel free to\r\n                                        discover each of them.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ul className='sm:mb-26 mt-14 px-2  mt-18 max-w-7xl mx-auto sm:px-6 lg:px-8 pt-12 flex justify'>\r\n                            {tripsData.map(({ id, tabTitle }) => (\r\n                                <div className='w-1/4 mb-10'>\r\n                                    <li\r\n                                        key={id}\r\n                                        onClick={() => {\r\n                                            setActiveTabId(id);\r\n                                            tripsData.forEach((elem) => {\r\n                                                if (\r\n                                                    !props.refs[`${elem.id}`]\r\n                                                        ?.current\r\n                                                )\r\n                                                    return;\r\n                                                props.refs[\r\n                                                    `${elem.id}`\r\n                                                ].current.classList.remove(\r\n                                                    \"activeTab\"\r\n                                                );\r\n                                            });\r\n                                        }}\r\n                                        className={`${\r\n                                            activeTabId === id\r\n                                                ? \"activeTab\"\r\n                                                : \"border-b-2 border-custom-green border-opacity-30\"\r\n                                        } font-larsseit font-bold text-lg align-middle cursor-pointer pb-8 text-custom-green`}\r\n                                        ref={props.refs[`${id}`]}\r\n                                    >\r\n                                        {tabTitle}\r\n                                    </li>\r\n                                </div>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <ul className='mt-14 px-2 mt-18 max-w-7xl mx-auto sm:px-6 lg:px-8 pt-12 flex justify'>\r\n                            {tripsData.map(\r\n                                ({ id, tabTitle, url, description }, idx) =>\r\n                                    activeTabId === id && (\r\n                                        <div\r\n                                            className='grid justify-center grid-cols-2 gap-28 mt-24'\r\n                                            key={id}\r\n                                        >\r\n                                            <div className='image-container'>\r\n                                                <div className='content'>\r\n                                                    <img\r\n                                                        src={url}\r\n                                                        alt={tabTitle}\r\n                                                        className='rounded-lg'\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className='info'>\r\n                                                <h2 className='font-n text-white uppercase tracking-widest font-bold text-lg mt-3'>\r\n                                                    {tabTitle}\r\n                                                </h2>\r\n                                                <p className='sm:pr-12 font-larsseit text-white text-base pt-10'>\r\n                                                    {description}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TripOptions;\r\n","export default __webpack_public_path__ + \"static/media/ganapathy.94f16745.png\";","import { useState, useRef, useEffect } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Content from \"../Content/Content\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport TripOptions from \"../TripOptions/TripOptions\";\r\nimport BackgroundImage from \"../../assets/images/ganapathy.png\";\r\n\r\nconst Main = () => {\r\n    const chillRef = useRef(null);\r\n    const spookyRef = useRef(null);\r\n    const dessertRef = useRef(null);\r\n    const outWildRef = useRef(null);\r\n    const scrollToContent = useRef(null);\r\n    const [container, setContainer] = useState(window.innerHeight);\r\n\r\n    /* we are using these values to reflect tabs names */\r\n    const refs = {\r\n        1: chillRef,\r\n        2: spookyRef,\r\n        3: dessertRef,\r\n        4: outWildRef,\r\n        5: scrollToContent,\r\n    };\r\n    /* this function is for dynamically set the height of the page */\r\n    const handleContainerHeight = () => {\r\n        setContainer(window.innerHeight);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleContainerHeight);\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div\r\n                className='bg-cover -2x relative'\r\n                style={{\r\n                    backgroundImage: `url(${BackgroundImage})`,\r\n                    height: container,\r\n                }}\r\n            >\r\n                {/* Main container */}\r\n                <div className='max-w-7xl mx-auto sm:px-6 lg:px-4 pt-10'>\r\n                    <Header refs={refs} />\r\n                    <Content />\r\n                    <Footer refs={scrollToContent} />\r\n                    {/* this div is the one that responsible for the shadow at the end of main poge image */}\r\n                    <div className='bg-custom-gradient-to-r absolute w-full bottom-0 z-0 left-0 h-96'></div>\r\n                </div>\r\n                <TripOptions refs={refs} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport Main from \"./components/Main/Main\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className='w-full h-full top-0 bg-custom-black m-0 p-0'>\n                <Main />\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://cra.link/PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://cra.link/PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/tailwind.css\";\nimport \"./assets/styles/navigation.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}